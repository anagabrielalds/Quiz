// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quizzes.API.DAL;

#nullable disable

namespace Quizzes.API.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230422191909_Migration02")]
    partial class Migration02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTema")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdTema")
                        .IsUnique();

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Respostas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EhCorreta")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int>("IdQuiz")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdQuiz");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TemaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Quiz", b =>
                {
                    b.HasOne("Quizzes.API.Domain.Entity.Tema", "Tema")
                        .WithOne("Quiz")
                        .HasForeignKey("Quizzes.API.Domain.Entity.Quiz", "IdTema")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Respostas", b =>
                {
                    b.HasOne("Quizzes.API.Domain.Entity.Quiz", "Quiz")
                        .WithMany("Respostas")
                        .HasForeignKey("IdQuiz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Quiz", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("Quizzes.API.Domain.Entity.Tema", b =>
                {
                    b.Navigation("Quiz")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
